// Extra small screen / phone
// Note: Deprecated $screen-xs and $screen-phone as of v3.0.1
$screen-xs:                  480px !default;
$screen-xs-min:              $screen-xs !default;
// $screen-phone:               $screen-xs-min !default;

// Small screen / tablet
// Note: Deprecated $screen-sm and $screen-tablet as of v3.0.1
$screen-sm:                  768px !default;
$screen-sm-min:              $screen-sm !default;
// $screen-tablet:              $screen-sm-min !default;

// Medium screen / desktop
// Note: Deprecated $screen-md and $screen-desktop as of v3.0.1
$screen-md:                  992px !default;
$screen-md-min:              $screen-md !default;
// $screen-desktop:             $screen-md-min !default;

// Large screen / wide desktop
// Note: Deprecated $screen-lg and $screen-lg-desktop as of v3.0.1
$screen-lg:                  1200px !default;
$screen-lg-min:              $screen-lg !default;
// $screen-lg-desktop:          $screen-lg-min !default;

// So media queries don't overlap when required, provide a maximum
$screen-xs-max:              ($screen-sm-min - 1) !default;
$screen-sm-max:              ($screen-md-min - 1) !default;
$screen-md-max:              ($screen-lg-min - 1) !default;

@function breakpoint (
  $query,
  $grid-columns: $grid-columns,
  $grid-column-width: $grid-column-width,
  $grid-gutter-width: $grid-gutter-width
) {
  @if $query == xs {
    $query: "(min-width: #{$screen-xs-min})";
  }
  @if $query == sm {
    $query: "(min-width: #{$screen-sm-min})";
  }
  @if $query == md {
    $query: "(min-width: #{$screen-md-min})";
  }
  @if $query == lg {
    $query: "(min-width: #{$screen-lg-min})";
  }
  @if $query == max-xs {
    $query: "(max-width: #{$screen-xs-max})";
  }
  @if $query == max-sm {
    $query: "(max-width: #{$screen-sm-max})";
  }
  @if $query == max-md {
    $query: "(max-width: #{$screen-md-max})";
  }
  @if $query == max-lg {
    $query: "(max-width: #{$screen-lg-max})";
  }
  @if $query == xs-sm {
    $query: "(min-width: #{$screen-xs-min}) and (max-width: #{$screen-xs-max})";
  }
  @return $query $grid-columns $grid-column-width $grid-gutter-width;
}

@mixin breakpoint ($breakpoint) {

  $default-grid-columns: $grid-columns;
  $default-grid-column-width: $grid-column-width;
  $default-grid-gutter-width: $grid-gutter-width;

  $grid-columns: nth($breakpoint, 2) !global;
  $grid-column-width: nth($breakpoint, 3) !global;
  $grid-gutter-width: nth($breakpoint, 4) !global;

  @media #{unquote(nth($breakpoint, 1))} {
    @content;
  }

  $grid-columns: $default-grid-columns !global;
  $grid-column-width: $default-grid-column-width !global;
  $grid-gutter-width: $default-grid-gutter-width !global;

}